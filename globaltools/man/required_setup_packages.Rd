% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/targets_project_starter.R
\docType{data}
\name{required_setup_packages}
\alias{required_setup_packages}
\title{This script provides a comprehensive function \code{create_new_project()}.
The Idea is to create a reproducible project.
Oriented on:
Noble WS (2009) A Quick Guide to Organizing Computational Biology Projects.
PLoS Comput Biol 5(7): e1000424. doi:10.1371/journal.pcbi.1000424}
\format{
An object of class \code{character} of length 8.
}
\usage{
required_setup_packages
}
\description{
\itemize{
\item \strong{renv}: Is used to initialize isolated and mobile packages.
Initialization via: \code{renv::init()} and \code{renv::snapshot()} to store the
version of the installed packages.
\code{sessionInfo()} is used to see all used packages and versions.
}
}
\details{
\itemize{
\item \strong{Targets‑Outputs}: a \verb{_targets.R}‑Skeleton is created (optional),
supported by \code{gittargets}.
Example: \code{tar_git_init()} and \code{tar_git_snapshot()}
\item \strong{Modules}: The function \code{create_new_project()} uses small helper functions.
Each function has a roxgen2 comment block.
\item \strong{Documentation}: README and Notebook are created, which can be used for
important documentation, like references, research questions, objectives,
(statistical) methods, without a specific presetting to keep it more general.
\item \strong{Tests}: A testthat skeleton is created. Here, data checks & pipeline tests
can be done.
\item \strong{Project structure}:

Projects/                        # Parent directory for all projects
├── Projectname_1/
├── data/
│            ├── raw/                        # Original data (do not modify)
│            └── cleaned/                    # Processed data ready for analysis
├── doc/
├── notebooks/
│            └── YYYY-MM-DD_notes.md         # Project notes and observations
├── results/
│            ├── YYYY-MM-DD_cleaning/
│            └── YYYY-MM-DD_analysis/
├── reports/
│            ├── Projectname_1_report.qmd
├── R/
│            ├── cleaning_script.R
│            ├── load_lib.R                  # Load required libraries
│            ├── read_config.R               # Project-specific configurations
│            ├── runall_script.R             # Optional - Central analysis pipeline
│            └── other_scripts.R
├── tests/
│            └── testthat/ # Rscripte die alles jeweils testen.
├── tmp/
├── .gitignore
├── .Renviron
├── _targets.R
├── README.qmd
│        └── Projectname_1.Rproj

├── Projectname_2/
├── ...
├── global_tools/                      # Important!
│    ├── targets_project_setup.R
│    ├── helper_functions.R            # Important!
│    └── stats_functions.R             # other global functions
\item \strong{Procedure} -------------------------------------------------------------
\enumerate{
\item Create a parent folder called \code{Path/to/Projects} & a
directory \code{Path/to/Projects/globaltools}.
\item Save this file in the directory \code{Path/to/Projects/globaltools/targets_project_setup.R}.
\item In a fresh RStudio session run: \code{source("Path/to/Projects/globaltools/targets_project_setup.R")}
to import the function \code{create_new_project()}.
\item You also have to save the helper functions into \code{Path/to/Projects/globaltools}
and access it via \code{source("Path/to/Projects/global_tools/helper_functions.R")}.
\item To start a new project, run: \code{create_new_project("Projectname_1")}
\item Open the newly created *.Rproj, then:
targets::tar_make()
\item More targets commandos:
| Commandos               | Explanation                               |
}
}

Prerequisite:
Needed packages: \strong{fs}, \strong{here}, \strong{renv}, \strong{yaml}, \strong{withr},
\strong{gittargets}, \strong{targets} and \strong{tarchetypes}.
If missing it will be installed automatically.
}
\seealso{
Noble, W., (2009) "A Quick Guide to Organizing Computational Biology Projects"
– PLoS Computational Biology 5(7):e1000424. https://doi.org/10.1371/journal.pcbi.1000424
}
\keyword{datasets}
